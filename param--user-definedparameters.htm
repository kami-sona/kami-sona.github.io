<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=3, user-scalable=yes"/>
  <meta name="version" content="2022.4.0"/>
  <link rel="StyleSheet" href="./template/styles/topic.min.css" type="text/css"/>
  <link rel="StyleSheet" data-skin="true" type="text/css" href="./template/LTspice/layout.css"/>
  <link rel="StyleSheet" data-skin="true" href="./template/LTspice/userstyles.css" type="text/css"/>
  
  <script data-relpath="." src="./template/scripts/csh-redirect.js" type="text/javascript"></script>

  <title>.PARAM — User-Defined Parameters</title>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  
  <meta name="description" content=""/>
  <meta name="generator" content="Adobe RoboHelp 2022"/>
  <meta name="rh-index-keywords" content=".PARAM"/>
  <link rel="stylesheet" type="text/css" href="assets/css/default.css"/>
<meta name="rh-version" content="2022.5.24"/></head>

<body class="rh-BODY-wrapper">
  <div class="cookie-widget-holder" id="cookie-status-widget-holder"></div>
  <div class="RH-LAYOUT-HEADER-skip-content-container" id="skip-to-content"></div>
  <header class="RH-LAYOUT-HEADER-container" role="banner">
    <div class="RH-LAYOUT-HEADER-logo-box  ">
      <div class="RH-LAYOUT-HEADER-logo" id="logo-holder"></div>
      <div class="RH-LAYOUT-HEADER-title" id="topic-title-holder"></div>
    </div>
    <div class="RH-LAYOUT-HEADERMENU-container" id="header-menu"></div>
    <div class="search-placeholder-class" id="search-with-help"></div>
  </header>
  <main role="main" class="RH-LAYOUT-BODY-container">
    <div class="RH-LAYOUT-SEARCHRESULTS" id="rh-searchresults"></div>
    <div class="RH-LAYOUT-LEFTPANEL-container" id="rh-leftpanel"></div>
    <div class="rh-layout-BODY-main" id="rh-layout-main">
      <div class="RH-LAYOUT-TOOLBAR-toolbar-box" id="rh-toolbar"></div>
      <div class="rh-layout-BODY-body">
        <div class="RH-LAYOUT-CENTERPANEL-container">
          <div class="rh-layout-selectdetails" id="rh-selectdetails"></div>
          <div class="RH-LAYOUT-CENTERPANEL-topic-box" id="rh-topic">
  <div id="topic_content">
    <h1>.PARAM — User-Defined Parameters</h1>
    <p>The .param directive allows the creation of user-defined constants. This is useful for associating a name with a value for the sake of clarity and parameterizing subcircuits so that abstract circuits can be saved in libraries.</p>
    <p>The .param statement can be included inside a subcircuit definition to limit the scope the parameter value to that subcircuit.</p>
    <p>From version 24.1 on, LTspice requires no curly braces (nor apostrophes) for parameter substitution and expression evaluation anymore, except for those cases where omitting them would cause a syntactical ambiguity, for instance for circuit element values that are not specified as named parameters, like the value of a resistor.</p>
    <p>The order in which user-defined constants are defined is irrelevant. Circular dependencies are not permitted. Every name must be defined, except for the following defaults:</p>
    <table>
      <tbody>
        <tr>
          <th>Name</th>
          <th>Value</th>
        </tr>
        <tr>
          <td>PI</td>
          <td>3.14159265358979323846</td>
        </tr>
        <tr>
          <td>BOLTZ</td>
          <td>1.3806503e-23</td>
        </tr>
        <tr>
          <td>ECHARGE</td>
          <td>1.602176462e-19</td>
        </tr>
        <tr>
          <td>PLANCK</td>
          <td>6.62620e-34</td>
        </tr>
        <tr>
          <td>KELVIN</td>
          <td>-273.15</td>
        </tr>
        <tr>
          <td>GMIN</td>
          <td>10<sup>-12</sup></td>
        </tr>
      </tbody>
    </table>
    <p>These defaults are provided for backwards compatibility. They can be redefined, which is why relying on them is not recommended.</p>
    <p>&quot;temp&quot; is a reserved name on the top level. It is always defined and represents temperature in °C.</p>
    <p>A user-defined constant introduced with <span class="netlist">.param</span> can either be a numerical value, e.g.</p>
    <p class="netlist">.param length = 20µ</p>
    <p>or a text string, e.g</p>
    <p class="netlist">.param name = &quot;U125D&quot;</p>
    <p>Strings can be used to parameterize models or subcircuits, in particular when combined with the <span class="netlist">select()</span> function. For example, the following snippet uses a stepped numerical parameter <span class="netlist">n</span> to alter the model of a diode D1:</p>
    <p class="netlist">.param diode = select(n, &quot;1N4148&quot;, &quot;1N4007&quot;, &quot;1N914&quot;)<br/>
      D1 N1 N2 {diode}<br/>
      .step param n 0 2 1</p>
    <p>Note that numerical parameters implicitly convert to strings. The conversion of non-integers is unspecified. Implicit conversion takes place before performing any operations, for instance</p>
    <p class="netlist">.param text = 1 + 3 + &quot;text&quot;</p>
    <p>yields &quot;13text&quot;, not &quot;4text&quot;.</p>
    <p>Below is an example using both a .param statement and directly passing parameters on the subcircuit invocation line.</p>
    <p class="netlist">* This is the circuit definition<br/>
      .param x=y y=z z=1k*tan(pi/4+.1)<br/>
      X1 a b 0 divider top=x bot=z<br/>
      V1 a 0 pulse(0 1 0 .5μ .5μ 0 1μ)<br/>
      <br/>
      * this is the definition of the subcircuit<br/>
      .subckt divider n1 n2 n3<br/>
      r1 n1 n2 {top}<br/>
      r2 n2 n3 {bot}<br/>
      .ends
    </p>
    <p><span style="font-size: 0.9rem;">The following functions are available for numerical parameters:</span></p>
    <table>
      <tbody>
        <tr>
          <th>Function Name</th>
          <th>Description</th>
        </tr>
        <tr>
          <td>abs(x)</td>
          <td>Absolute value of x</td>
        </tr>
        <tr>
          <td>acos(x)</td>
          <td>Real part of the arc cosine of x, e.g., acos(-5) returns 3.14159, not 3.14159+2.29243i</td>
        </tr>
        <tr>
          <td>arccos(x)</td>
          <td>Synonym for acos()</td>
        </tr>
        <tr>
          <td>acosh(x)</td>
          <td>Real part of the arc hyperbolic cosine of x, e.g., acosh(.5) returns 0, not 1.0472i</td>
        </tr>
        <tr>
          <td>asin(x)</td>
          <td>Real part of the arc sine of x, e.g., asin(-5) returns -1.57080, not -1.57080+2.29243i</td>
        </tr>
        <tr>
          <td>arcsin(x)</td>
          <td>Synonym for asin()</td>
        </tr>
        <tr>
          <td>asinh(x)</td>
          <td>Arc hyperbolic sine</td>
        </tr>
        <tr>
          <td>atan(x)</td>
          <td>Arc tangent of x</td>
        </tr>
        <tr>
          <td>arctan(x)</td>
          <td>Synonym for atan()</td>
        </tr>
        <tr>
          <td>atan2(y,x)</td>
          <td>Four quadrant arc tangent of y/x</td>
        </tr>
        <tr>
          <td>atanh(x)</td>
          <td>Arc hyperbolic tangent</td>
        </tr>
        <tr>
          <td>buf(x)</td>
          <td>1 if x &gt; .5, else 0</td>
        </tr>
        <tr>
          <td>cbrt(x)</td>
          <td>Cube root of (x)</td>
        </tr>
        <tr>
          <td>ceil(x)</td>
          <td>Integer equal or greater than x</td>
        </tr>
        <tr>
          <td>cos(x)</td>
          <td>Cosine of x</td>
        </tr>
        <tr>
          <td>cosh(x)</td>
          <td>Hyperbolic cosine of x</td>
        </tr>
        <tr>
          <td>exp(x)</td>
          <td>e to the x</td>
        </tr>
        <tr>
          <td>fabs(x)</td>
          <td>Same as abs(x)</td>
        </tr>
        <tr>
          <td>flat(x)</td>
          <td>Random number between -x and x with uniform distribution</td>
        </tr>
        <tr>
          <td>floor(x)</td>
          <td>Integer equal to or less than x</td>
        </tr>
        <tr>
          <td>gauss(x)</td>
          <td>Random number from Gaussian distribution with sigma of x.</td>
        </tr>
        <tr>
          <td>hypot(x,y)</td>
          <td>sqrt(x**2 + y**2)</td>
        </tr>
        <tr>
          <td>if(x,y,z)</td>
          <td>If x &gt; .5, then y else z</td>
        </tr>
        <tr>
          <td>int(x)</td>
          <td>Convert x to integer</td>
        </tr>
        <tr>
          <td>inv(x)</td>
          <td>0. if x &gt; .5, else 1.</td>
        </tr>
        <tr>
          <td>limit(x,y,z)</td>
          <td>Intermediate value of x, y, and z</td>
        </tr>
        <tr>
          <td>ln(x)</td>
          <td>Natural logarithm of x</td>
        </tr>
        <tr>
          <td>log(x)</td>
          <td>Alternate syntax for ln()</td>
        </tr>
        <tr>
          <td>log10(x)</td>
          <td>Base 10 logarithm</td>
        </tr>
        <tr>
          <td>max(x,y)</td>
          <td>The greater of x or y</td>
        </tr>
        <tr>
          <td>mc(x,y)</td>
          <td>A random number between x*(1+y) and x*(1-y) with uniform distribution.</td>
        </tr>
        <tr>
          <td>min(x,y)</td>
          <td>The smaller of x or y</td>
        </tr>
        <tr>
          <td>mod(x,y)</td>
          <td><span>Remainder of the division operation x / y</span></td>
        </tr>
        <tr>
          <td>pow(x,y)</td>
          <td>Real part of x**y, e.g., pow(-.5,1.5) returns 0., not 0.353553i</td>
        </tr>
        <tr>
          <td>pwr(x,y)</td>
          <td>abs(x)**y</td>
        </tr>
        <tr>
          <td>pwrs(x,y)</td>
          <td>sgn(x)*abs(x)**y</td>
        </tr>
        <tr>
          <td>rand(x)</td>
          <td>Random number between 0 and 1 depending on the integer value of x.</td>
        </tr>
        <tr>
          <td>random(x)</td>
          <td>Similar to rand(), but smoothly transitions between values.</td>
        </tr>
        <tr>
          <td>round(x)</td>
          <td>Nearest integer to x</td>
        </tr>
        <tr>
          <td>select(x,a,b,c,d,...)</td>
          <td>Rounds x to the nearest integer and uses the result as index into the table [a,b,c,d,...], where the first element has index 0.</td>
        </tr>
        <tr>
          <td>sgn(x)</td>
          <td>Sign of x</td>
        </tr>
        <tr>
          <td>sin(x)</td>
          <td>Sine of x</td>
        </tr>
        <tr>
          <td>sinh(x)</td>
          <td>Hyperbolic sine of x</td>
        </tr>
        <tr>
          <td>sqrt(x)</td>
          <td>Real part of the square root of x, e.g., sqrt(-1) returns 0, not 0.707107i</td>
        </tr>
        <tr>
          <td>table(x,a,b,c,d,...)</td>
          <td>Interpolate a value for x based on a look up table given as a set of pairs of points.</td>
        </tr>
        <tr>
          <td>table(x, .include &quot;&lt;filename&gt;&quot;)</td>
          <td>Interpolate a value for x based on a look up table given as a set of pairs of points listed as numbers in the file &lt;filename&gt;.</td>
        </tr>
        <tr>
          <td>tan(x)</td>
          <td>Tangent of x.</td>
        </tr>
        <tr>
          <td>tanh(x)</td>
          <td>Hyperbolic tangent of x</td>
        </tr>
        <tr>
          <td>u(x)</td>
          <td>Unit step, i.e., 1 if x &gt; 0., else 0.</td>
        </tr>
        <tr>
          <td>uramp(x)</td>
          <td>x if x &gt; 0., else 0.</td>
        </tr>
        <tr>
          <td>xor(x,y)</td>
          <td>Converts x and y to Boolean and returns x xor y.</td>
        </tr>
      </tbody>
    </table>
    <p>Numerical parameters support the following operations, grouped in reverse order of precedence of evaluation:</p>
    <table>
      <tbody>
        <tr>
          <th>Operand</th>
          <th>Description</th>
        </tr>
        <tr>
          <td>&amp;</td>
          <td>Convert the expressions to either side to Boolean, then AND.</td>
        </tr>
        <tr>
          <td>|</td>
          <td>Convert the expressions to either side to Boolean, then OR.</td>
        </tr>
        <tr>
          <td>^</td>
          <td>Convert the expressions to either side to Boolean, then XOR.</td>
        </tr>
        <tr>
          <td> </td>
          <td> </td>
        </tr>
        <tr>
          <td>&gt;</td>
          <td>True if expression on the left is greater than the expression on the right, otherwise false.</td>
        </tr>
        <tr>
          <td>&lt;</td>
          <td>True if expression on the left is less than the expression on the right, otherwise false.</td>
        </tr>
        <tr>
          <td>&gt;=</td>
          <td>True if expression on the left is greater than or equal the expression on the right, otherwise false.</td>
        </tr>
        <tr>
          <td>&lt;=</td>
          <td>True if expression on the left is less than or equal the expression on the right, otherwise false.</td>
        </tr>
        <tr>
          <td> </td>
          <td> </td>
        </tr>
        <tr>
          <td>+</td>
          <td>Floating point addition</td>
        </tr>
        <tr>
          <td>-</td>
          <td>Floating point subtraction</td>
        </tr>
        <tr>
          <td> </td>
          <td> </td>
        </tr>
        <tr>
          <td>*</td>
          <td>Floating point multiplication</td>
        </tr>
        <tr>
          <td>/</td>
          <td>Floating point division</td>
        </tr>
        <tr>
          <td>%</td>
          <td>Remainder of floating point division, same as mod(x,y) function</td>
        </tr>
        <tr>
          <td> </td>
          <td> </td>
        </tr>
        <tr>
          <td>**</td>
          <td>Raise left hand side to power of right hand side, only real part is returned, e.g., -2**1.5 returns zero, not 2.82843i</td>
        </tr>
      </tbody>
    </table>
    <p>The following functions are available for string parameters:</p>
    <table>
      <tbody>
        <tr>
          <th>Function Name</th>
          <th>Description</th>
        </tr>
        <tr>
          <td>select(x,a,b,c,d,...)</td>
          <td>Rounds x to the nearest integer and uses the result as index into the table [a,b,c,d,...], where the first element has index 0.</td>
        </tr>
        <tr>
          <td>table(x,a,b,c,d,...)</td>
          <td>Returns b if x==a, or d if x==c, etc. No rounding or interpolation is performed. It is recommended to use select() instead.</td>
        </tr>
      </tbody>
    </table>
    <p>String parameters only support the &quot;+&quot; operator for string concatenation, e.g:</p>
    <p class="netlist">.param variant = &quot;_fast&quot;<br/>
      X23 PIN1 PIN2 {&quot;U125D&quot; + variant}</p>
    <p>All parameter substitution evaluation is done before the simulation begins.</p>
  </div>
  <div id="topic_footer">
    <div id="topic_footer_content">Copyright © 1998-2023 by Analog Devices Inc.. All Rights Reserved.</div>
  </div>

</div>
          <div class="RH-LAYOUT-BRS-container" id="rh-brs"></div>
        </div>
        <div class="RH-LAYOUT-RIGHTPANEL-container" id="rh-rightpanel"></div>
      </div>
    </div>
  </main>
  <footer role="contentinfo" class="RH-LAYOUT-FOOTER-container" id="rh-footer"></footer>
  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "."
    gCommonRootRelPath = "."
    gTopicId = "5.2.24"
  
//]]></script>


  <script src="./template/scripts/topicpage.js"></script>
  <script src="./whxdata/layoutconfig.js"></script>
  <script src="./whxdata/brsdata.js"></script>

  
    

            


</body></html>